{{- if .Values.keycloak.enabled }}
---
apiVersion: keycloak.org/v1alpha1
kind: Keycloak
metadata:
  name: pbkeycloak
  labels:
    app: pbkeycloak
    {{- include "pet-battle-infra.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "25"
spec:
  instances: 1
  externalAccess:
    enabled: true
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: pbserver
  labels:
    client: pbserver
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "25"
spec:
  realmSelector:
    matchLabels:
      realm: pbrealm
  client:
    name: pbserver
    clientId: pbserver
    bearerOnly: true
    protocol: openid-connect
    standardFlowEnabled: true
    serviceAccountsEnabled: true
    directAccessGrantsEnabled: true
    surrogateAuthRequired: false
    enabled: true
    alwaysDisplayInConsole: false,
    clientAuthenticatorType: "client-secret"
    consentRequired: false
    implicitFlowEnabled: false
    authorizationServicesEnabled: true
    publicClient: false
    frontchannelLogout: false
    fullScopeAllowed: true
    nodeReRegistrationTimeout: -1
    defaultRoles:
      - "pbplayer"
      - "pbviewer"
      - "pbtest"
      - "pbadmin"
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: pbclient
  labels:
    client: pbclient
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "25"
spec:
  realmSelector:
    matchLabels:
      realm: pbrealm
  client:
    name: pbclient
    clientId: pbclient
    bearerOnly: false
    protocol: openid-connect
    publicClient: true
    ########################################################
    # These will need adjusting. The second url is used for testing. Web origins is open.
    redirectUris:
      - "http://{{ $.Values.pet_battle_uri_name }}-{{ .Release.Namespace }}.{{ include "pet-battle-infra.app_domain" . }}/*"
      - "http://localhost:4200/*"
    webOrigins:
      - "*"
    ########################################################
    standardFlowEnabled: true
    serviceAccountsEnabled: true
    directAccessGrantsEnabled: true
    surrogateAuthRequired: false
    enabled: true
    alwaysDisplayInConsole: false,
    clientAuthenticatorType: "client-secret"
    consentRequired: false
    implicitFlowEnabled: false
    frontchannelLogout: false
    fullScopeAllowed: true
    nodeReRegistrationTimeout: -1
    defaultRoles:
      - "pbplayer"
      - "pbviewer"
      - "pbtest"
      - "pbadmin"
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakRealm
metadata:
  name: pbrealm
  labels:
    realm: pbrealm
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "20"
spec:
  realm:
    id: "pbrealm"
    realm: "pbrealm"
    enabled: true
    displayName: "Pet Battle Single Sign On Realm"
    loginWithEmailAllowed: false
    registrationAllowed: true
    registrationEmailAsUsername: false
    rememberMe: true
    sslRequired: "external"
    users:
      - username: "pbadmin"
        firstName: "pbadmin"
        lastName: "pbadmin"
        email: "pbadmin@petbattle.com"
        enabled: true
        credentials:
        - type: "password"
          value: "password"
        realmRoles:
        - "pbtest"
        - "pbadmin"
        - "pbplayer"
        - "pbviewer"
        clientRoles:
          account:
            - "manage-account"
            - "view-profile"
          realm-management:
            - "manage-users"
            - "view-users"
            - "query-users"
            - "create-client"
      - username: "myuser"
        firstName: "John"
        lastName: "Doe"
        email: "myuser@petbattle.com"
        enabled: true
        credentials:
        - type: "password"
          value: "password"
        realmRoles:
        - "pbplayer"
        - "pbviewer"
  instanceSelector:
    matchLabels:
      app: pbkeycloak
{{- end }}
